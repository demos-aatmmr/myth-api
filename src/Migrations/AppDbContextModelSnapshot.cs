// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MythApi.Common.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MythApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MythApi.Common.Database.Models.Alias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GodId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GodId");

                    b.ToTable("Alias", (string)null);
                });

            modelBuilder.Entity("MythApi.Common.Database.Models.God", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MythologyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MythologyId");

                    b.ToTable("God", (string)null);
                });

            modelBuilder.Entity("MythApi.Common.Database.Models.Mythology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mythology", (string)null);
                });

            modelBuilder.Entity("MythApi.Common.Database.Models.Alias", b =>
                {
                    b.HasOne("MythApi.Common.Database.Models.God", "God")
                        .WithMany("Aliases")
                        .HasForeignKey("GodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("God");
                });

            modelBuilder.Entity("MythApi.Common.Database.Models.God", b =>
                {
                    b.HasOne("MythApi.Common.Database.Models.Mythology", "Mythology")
                        .WithMany("Gods")
                        .HasForeignKey("MythologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mythology");
                });

            modelBuilder.Entity("MythApi.Common.Database.Models.God", b =>
                {
                    b.Navigation("Aliases");
                });

            modelBuilder.Entity("MythApi.Common.Database.Models.Mythology", b =>
                {
                    b.Navigation("Gods");
                });
#pragma warning restore 612, 618
        }
    }
}
